@model panasonic.ViewModels.UserViewModel.IndexViewModel;

@{
    ViewData["PanelTitle"] = "Manage Users";
}

@section PanelButtons {
    <a class="btn btn-success btn-round" asp-action="Create">Create User</a>
}

<div class="card">
    <div class="card-header">
        <div class="card-title">Filter</div>
    </div>
    <div class="card-body">
        <form id="filter-user-form">
            <div class="form-row">
                <div class="form-group col-4">
                    <label>Employee ID</label>
                    <input class="form-control" type="number" placeholder="Ex : 12345"
                        asp-for="UserQueryObject.EmployeeID">
                </div>
                <div class="form-group col-4">
                    <label>Full Name</label>
                    <input class="form-control" placeholder="Ex : My Name" asp-for="UserQueryObject.Fullname">
                </div>
                <div class="form-group col-4">
                    <label>Role</label>
                    <select class="form-control" asp-for="UserQueryObject.RoleName" asp-items="ViewBag.RolesOption">
                        <option value="">All</option>
                    </select>
                </div>
            </div>
            <div>
                <button type="button" id="reset-filter-form-btn" class="btn btn-dark">Clear Filter</button>
                <button type="submit" class="ml-2 btn btn-primary">Filter</button>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive" id="user-table">
            <partial name="~/Views/Shared/Components/User/_UserTable.cshtml" model="@Model.Users" />
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $('#filter-user-form').on('submit', function (e) {
                e.preventDefault();

                const query = $(this).serialize();
                const baseUrl = window.location.origin + window.location.pathname;
                const newUrl = baseUrl + "?" + query;

                window.history.pushState({}, '', newUrl)

                ajaxRequestAndRender(this, newUrl)

            });

            $('#reset-filter-form-btn').on('click', function (e) {
                const filterUserForm = $('#filter-user-form');
                filterUserForm.find('input, select').each(function () {
                    $(this).val(null)
                })
                filterUserForm.submit();
            })


        });

        function ajaxRequestAndRender(form, url, method = "get", successAlertMessage, onAlways = function () { }) {
            disableAllButtons(form);

            $.ajax(url, {
                method,
                headers: {
                    'x-refresh': true
                },
                success: function (response) {
                    $('#user-table').html(response);
                    if (successAlertMessage) {
                        $.notify({ message: successAlertMessage }, { type: "success" })
                    }
                }
            }).always(function () {
                enableAllButtons(form);
                onAlways();

            })
        }

        function disableAllButtons(form) {
            $(form).find('button').prop('disabled', true)
        }
        function enableAllButtons(form) {
            $(form).find('button').prop('disabled', false)
        }



    </script>
}
