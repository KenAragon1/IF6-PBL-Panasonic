// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace panasonic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241123075313_ModifyAreaTableAndDeleteAreaTypeTable")]
    partial class ModifyAreaTableAndDeleteAreaTypeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("panasonic.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Remark")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Remark", "Type")
                        .IsUnique();

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Remark = 0,
                            Type = "Store"
                        });
                });

            modelBuilder.Entity("panasonic.Models.AreaMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("AreaMaterials");
                });

            modelBuilder.Entity("panasonic.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCodeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("panasonic.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Guest",
                            RoleName = "Guest"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Admin",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Store Manager",
                            RoleName = "StoreManager"
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "Shift Leader",
                            RoleName = "ShiftLeader"
                        },
                        new
                        {
                            Id = 5,
                            DisplayName = "Asistant Leader",
                            RoleName = "AsistantLeader"
                        });
                });

            modelBuilder.Entity("panasonic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@email.com",
                            EmployeeID = 301010,
                            Fullname = "Admin",
                            HashedPassword = "AQAAAAIAAYagAAAAEDmebvIsLhR6ZZt4vybuN6bikdNtBMV2QgdnO9v1eDQiUHqZp4ngMtQc7tsp5BaFQA==",
                            IsVerified = true,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asistantleader@email.com",
                            EmployeeID = 301011,
                            Fullname = "Asistant Leader",
                            HashedPassword = "AQAAAAIAAYagAAAAELryv8eo6xkIYMoIV6LoNgErYV3uvct+lxCf109/lpAjXWkyHWcpfHxTfwhdM3Fj8w==",
                            IsVerified = true,
                            RoleId = 5
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "shiftleader@email.com",
                            EmployeeID = 301012,
                            Fullname = "Shift Leader",
                            HashedPassword = "AQAAAAIAAYagAAAAEN+RBXGlLK9KgL5rmtBm3F8tQDVmDVvAT0IvmLHwo2SJiNKsPS2eLlzyW/c8Z1MYEQ==",
                            IsVerified = true,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "storemanager@email.com",
                            EmployeeID = 301013,
                            Fullname = "Store Manager",
                            HashedPassword = "AQAAAAIAAYagAAAAEK8K90/BzOMWpOJtyJ4AkfvvKykUM4lMob2pkpgK9UPhTIbeVcMFagrHNqHRPXybIQ==",
                            IsVerified = true,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("panasonic.Models.AreaMaterial", b =>
                {
                    b.HasOne("panasonic.Models.Area", "Area")
                        .WithMany("AreaMaterials")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("panasonic.Models.Material", "Material")
                        .WithMany("AreaMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("panasonic.Models.User", b =>
                {
                    b.HasOne("panasonic.Models.Area", "Area")
                        .WithMany("Users")
                        .HasForeignKey("AreaId");

                    b.HasOne("panasonic.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("panasonic.Models.Area", b =>
                {
                    b.Navigation("AreaMaterials");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("panasonic.Models.Material", b =>
                {
                    b.Navigation("AreaMaterials");
                });

            modelBuilder.Entity("panasonic.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
